{"version":3,"sources":["../node_modules/contentful-ui-extensions-sdk/dist/cf-extension-api.js","utils.ts","event-handlers.ts","table-controller.ts","index.ts"],"names":[],"mappings":"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","file":"src.3573ab60.js","sourceRoot":"../src","sourcesContent":["!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).contentfulExtension=t()}(this,(function(){\"use strict\";var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};var t=function(){return(t=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function n(e){var t=\"function\"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}function r(e,t){var n=\"function\"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value)}catch(e){o={error:e}}finally{try{r&&!r.done&&(n=i.return)&&n.call(i)}finally{if(o)throw o.error}}return a}function o(e){return this instanceof o?(this.v=e,this):new o(e)}var i=Object.freeze({__proto__:null,__extends:function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)},get __assign(){return t},__rest:function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var o=0;for(r=Object.getOwnPropertySymbols(e);o<r.length;o++)t.indexOf(r[o])<0&&Object.prototype.propertyIsEnumerable.call(e,r[o])&&(n[r[o]]=e[r[o]])}return n},__decorate:function(e,t,n,r){var o,i=arguments.length,a=i<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,r);else for(var u=e.length-1;u>=0;u--)(o=e[u])&&(a=(i<3?o(a):i>3?o(t,n,a):o(t,n))||a);return i>3&&a&&Object.defineProperty(t,n,a),a},__param:function(e,t){return function(n,r){t(n,r,e)}},__metadata:function(e,t){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(e,t)},__awaiter:function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function a(e){try{l(r.next(e))}catch(e){i(e)}}function u(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){e.done?o(e.value):new n((function(t){t(e.value)})).then(a,u)}l((r=r.apply(e,t||[])).next())}))},__generator:function(e,t){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=a.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=t.call(e,a)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},__exportStar:function(e,t){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])},__values:n,__read:r,__spread:function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e},__spreadArrays:function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),o=0;for(t=0;t<n;t++)for(var i=arguments[t],a=0,u=i.length;a<u;a++,o++)r[o]=i[a];return r},__await:o,__asyncGenerator:function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var r,i=n.apply(e,t||[]),a=[];return r={},u(\"next\"),u(\"throw\"),u(\"return\"),r[Symbol.asyncIterator]=function(){return this},r;function u(e){i[e]&&(r[e]=function(t){return new Promise((function(n,r){a.push([e,t,n,r])>1||l(e,t)}))})}function l(e,t){try{(n=i[e](t)).value instanceof o?Promise.resolve(n.value.v).then(s,c):f(a[0][2],n)}catch(e){f(a[0][3],e)}var n}function s(e){l(\"next\",e)}function c(e){l(\"throw\",e)}function f(e,t){e(t),a.shift(),a.length&&l(a[0][0],a[0][1])}},__asyncDelegator:function(e){var t,n;return t={},r(\"next\"),r(\"throw\",(function(e){throw e})),r(\"return\"),t[Symbol.iterator]=function(){return this},t;function r(r,i){t[r]=e[r]?function(t){return(n=!n)?{value:o(e[r](t)),done:\"return\"===r}:i?i(t):t}:i}},__asyncValues:function(e){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e=n(e),t={},o(\"next\"),o(\"throw\"),o(\"return\"),t[Symbol.asyncIterator]=function(){return this},t);function o(n){t[n]=e[n]&&function(t){return new Promise((function(r,o){(function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)})(r,o,(t=e[n](t)).done,t.value)}))}}},__makeTemplateObject:function(e,t){return Object.defineProperty?Object.defineProperty(e,\"raw\",{value:t}):e.raw=t,e},__importStar:function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t},__importDefault:function(e){return e&&e.__esModule?e:{default:e}}});function a(e,t,n){return e(n={path:t,exports:{},require:function(e,t){return function(){throw new Error(\"Dynamic requires are not currently supported by @rollup/plugin-commonjs\")}(null==t&&n.path)}},n.exports),n.exports}var u=a((function(e,t){var n;Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(){function e(){this._id=0,this._listeners={}}return e.prototype.dispatch=function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];for(var r in this._listeners)(e=this._listeners)[r].apply(e,t)},e.prototype.attach=function(e){var t=this;if(\"function\"!=typeof e)throw new Error(\"listener function expected\");var n=this._id++;return this._listeners[n]=e,function(){return delete t._listeners[n]}},e}();t.Signal=r;var o=\"__private__memoized__arguments__\",a=function(e){function t(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var i=e.call(this)||this;if(i[n]=[],!t.length)throw new Error(\"Initial value to be memoized expected\");return i[o]=t,i}return i.__extends(t,e),t.prototype.dispatch=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];this[o]=t,e.prototype.dispatch.apply(this,t)},t.prototype.attach=function(t){var n=e.prototype.attach.call(this,t);return t.apply(void 0,this[o]),n},t}(r);t.MemoizedSignal=a,n=o})),l=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e,t){!function(e,t){function n(r){var o=r.data;\"connect\"===o.method&&(e.removeEventListener(\"message\",n),t.apply(void 0,o.params))}e.addEventListener(\"message\",n)}(e,(function(r,o){var i=new n(r.id,e);t(i,r,o)}))};var n=function(){function e(e,t){var n=this;this._messageHandlers={},this._responseHandlers={},this._send=function(e,t){var n=0;return function(r,o){var i=n++;return t.postMessage({source:e,id:i,method:r,params:o},\"*\"),i}}(e,t.parent),t.addEventListener(\"message\",(function(e){n._handleMessage(e.data)}))}return e.prototype.call=function(e){for(var t=this,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];var o=this._send(e,n);return new Promise((function(e,n){t._responseHandlers[o]={resolve:e,reject:n}}))},e.prototype.send=function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];this._send(e,t)},e.prototype.addHandler=function(e,t){return e in this._messageHandlers||(this._messageHandlers[e]=new u.Signal),this._messageHandlers[e].attach(t)},e.prototype._handleMessage=function(e){if(e.method){var t=e.method,n=e.params,r=this._messageHandlers[t];r&&r.dispatch.apply(r,n)}else{var o=e.id,i=this._responseHandlers[o];if(!i)return;\"result\"in e?i.resolve(e.result):\"error\"in e&&i.reject(e.error),delete this._responseHandlers[o]}},e}()})),s=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=i.__importDefault(l);t.default=function(e,t){var r,o=((r={promise:null,resolve:null}).promise=new Promise((function(e){r.resolve=e})),r);return o.promise.then((function(t){var n=t[0],r=e.document;r.addEventListener(\"focus\",(function(){return n.send(\"setActive\",!0)}),!0),r.addEventListener(\"blur\",(function(){return n.send(\"setActive\",!1)}),!0)})),n.default(e,(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return o.resolve(e)})),function(n,r){var i=(void 0===r?{}:r).makeCustomApi,a=void 0===i?null:i;o.promise.then((function(r){var o,i=r[0],u=r[1],l=r[2],s=t(i,u,e);\"function\"==typeof a&&(o=a(i,u)),l.forEach((function(e){i._handleMessage(e)})),n(s,o)}))}}})),c=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=[\"id\",\"locale\",\"type\",\"required\",\"validations\",\"items\"],r=function(){function e(e,t){var r=this;n.forEach((function(e){void 0!==t[e]&&(r[e]=t[e])})),this._value=t.value,this._valueSignal=new u.MemoizedSignal(this._value),this._isDisabledSignal=new u.MemoizedSignal(void 0),this._schemaErrorsChangedSignal=new u.MemoizedSignal(void 0),this._channel=e,e.addHandler(\"valueChanged\",(function(e,t,n){e!==r.id||t&&t!==r.locale||(r._value=n,r._valueSignal.dispatch(n))})),e.addHandler(\"isDisabledChangedForFieldLocale\",(function(e,t,n){e===r.id&&t===r.locale&&r._isDisabledSignal.dispatch(n)})),e.addHandler(\"schemaErrorsChangedForFieldLocale\",(function(e,t,n){e===r.id&&t===r.locale&&r._schemaErrorsChangedSignal.dispatch(n)}))}return e.prototype.getValue=function(){return this._value},e.prototype.setValue=function(e){return this._value=e,this._valueSignal.dispatch(e),this._channel.call(\"setValue\",this.id,this.locale,e)},e.prototype.removeValue=function(){return this._value=void 0,this._channel.call(\"removeValue\",this.id,this.locale)},e.prototype.setInvalid=function(e){return this._channel.call(\"setInvalid\",e,this.locale)},e.prototype.onValueChanged=function(e){return this._valueSignal.attach(e)},e.prototype.onIsDisabledChanged=function(e){return this._isDisabledSignal.attach(e)},e.prototype.onSchemaErrorsChanged=function(e){return this._schemaErrorsChangedSignal.attach(e)},e}();t.default=r})),f=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=i.__importDefault(c),r=[\"id\",\"locales\",\"type\",\"required\",\"validations\",\"items\"],o=function(){function e(e,t,o){var u=this;r.forEach((function(e){void 0!==t[e]&&(u[e]=t[e])})),this._defaultLocale=o,this._fieldLocales=t.locales.reduce((function(r,o){var a,u=new n.default(e,{id:t.id,type:t.type,required:t.required,validations:t.validations,items:t.items,locale:o,value:t.values[o]});return i.__assign(i.__assign({},r),((a={})[o]=u,a))}),{}),a(this,o)}return e.prototype.getValue=function(e){return this._getFieldLocale(e).getValue()},e.prototype.setValue=function(e,t){return this._getFieldLocale(t).setValue(e)},e.prototype.removeValue=function(e){return this.setValue(void 0,e)},e.prototype.onValueChanged=function(e,t){return t||(t=e,e=void 0),this._getFieldLocale(e).onValueChanged(t)},e.prototype.onIsDisabledChanged=function(e,t){return t||(t=e,e=void 0),this._getFieldLocale(e).onIsDisabledChanged(t)},e.prototype._getFieldLocale=function(e){return a(this,e=e||this._defaultLocale),this._fieldLocales[e]},e.prototype.getForLocale=function(e){if(!e)throw new Error(\"getForLocale must be passed a locale\");return this._getFieldLocale(e)},e}();function a(e,t){if(!e._fieldLocales[t])throw new Error('Unknown locale \"'+t+'\" for field \"'+e.id+'\"')}t.default=o})),d=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e,t){var n=e.document,r=e.MutationObserver,o=function(){l.updateHeight()},i=new r(o),a=null,u=!1,l={startAutoResizer:function(){if(l.updateHeight(),u)return;u=!0,i.observe(n.body,{attributes:!0,childList:!0,subtree:!0,characterData:!0}),e.addEventListener(\"resize\",o)},stopAutoResizer:function(){if(!u)return;u=!1,i.disconnect(),e.removeEventListener(\"resize\",o)},updateHeight:function(e){void 0===e&&(e=null);null===e&&(e=Math.ceil(n.documentElement.getBoundingClientRect().height));e!==a&&(t.send(\"setHeight\",e),a=e)}};return l}})),p=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e,t,n,r){var o=t.sys,a=new u.MemoizedSignal(o),l=t.metadata;return e.addHandler(\"sysChanged\",(function(e){o=e,a.dispatch(o)})),i.__assign({getSys:function(){return o},onSysChanged:function(e){return a.attach(e)},fields:n.reduce((function(e,t){return e[t.id]=r(t),e}),{})},l?{metadata:l}:{})}})),_=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=[\"getContentType\",\"getEntry\",\"getEntrySnapshots\",\"getAsset\",\"getEditorInterface\",\"getPublishedEntries\",\"getPublishedAssets\",\"getContentTypes\",\"getEntries\",\"getEditorInterfaces\",\"getAssets\",\"createContentType\",\"createEntry\",\"createAsset\",\"updateContentType\",\"updateEntry\",\"updateAsset\",\"deleteContentType\",\"deleteEntry\",\"deleteAsset\",\"publishEntry\",\"publishAsset\",\"unpublishEntry\",\"unpublishAsset\",\"archiveEntry\",\"archiveAsset\",\"unarchiveEntry\",\"unarchiveAsset\",\"createUpload\",\"processAsset\",\"waitUntilAssetProcessed\",\"getUsers\",\"getAllScheduledActions\",\"getEntityScheduledActions\"];t.default=function(e,t){var r={};return n.forEach((function(t){r[t]=function(){for(var n=[],r=0;r<arguments.length;r++)n[r]=arguments[r];return e.call(\"callSpaceMethod\",t,n)}})),r.getCachedContentTypes=function(){return i.__spreadArrays(t)},r}})),h=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=function(e){return\"object\"!=typeof(t=e)||null===t||Array.isArray(t)?{}:e;var t};t.default=function(e,t){return{openAlert:r.bind(null,\"alert\"),openConfirm:r.bind(null,\"confirm\"),openPrompt:r.bind(null,\"prompt\"),openExtension:o,openCurrentApp:a,openCurrent:function(e){return t.app?a(e):o(i.__assign(i.__assign({},e),{id:t.extension}))},selectSingleEntry:u.bind(null,\"Entry\",!1),selectSingleAsset:u.bind(null,\"Asset\",!1),selectMultipleEntries:u.bind(null,\"Entry\",!0),selectMultipleAssets:u.bind(null,\"Asset\",!0)};function r(t,r){return e.call(\"openDialog\",t,n(r))}function o(r){if(r=n(r),(r=i.__assign(i.__assign({},r),{id:r.id||t.extension})).id)return e.call(\"openDialog\",\"extension\",r);throw new Error(\"Extension ID not provided.\")}function a(r){if(r=n(r),(r=i.__assign(i.__assign({},r),{id:t.app})).id)return e.call(\"openDialog\",\"app\",r);throw new Error(\"Not in the app context.\")}function u(t,r,o){return(o=n(o)).entityType=t,o.multiple=r,e.call(\"openDialog\",\"entitySelector\",o)}}})),y=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e,t){var n=new u.MemoizedSignal(void 0),r=new u.MemoizedSignal(void 0);return e.addHandler(\"localeSettingsChanged\",(function(e){n.dispatch(e)})),e.addHandler(\"showDisabledFieldsChanged\",(function(e){r.dispatch(e)})),{editorInterface:t,onLocaleSettingsChanged:function(e){return n.attach(e)},onShowDisabledFieldsChanged:function(e){return r.attach(e)}}}})),v=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=function(e,t){var n=new u.Signal;return e.addHandler(\"navigateSlideIn\",(function(e){n.dispatch(e)})),{openEntry:function(t,n){return e.call(\"navigateToContentEntity\",i.__assign(i.__assign({},n),{entityType:\"Entry\",id:t}))},openNewEntry:function(t,n){return e.call(\"navigateToContentEntity\",i.__assign(i.__assign({},n),{entityType:\"Entry\",id:null,contentTypeId:t}))},openBulkEditor:function(t,n){return e.call(\"navigateToBulkEditor\",i.__assign({entryId:t},n))},openAsset:function(t,n){return e.call(\"navigateToContentEntity\",i.__assign(i.__assign({},n),{entityType:\"Asset\",id:t}))},openNewAsset:function(t){return e.call(\"navigateToContentEntity\",i.__assign(i.__assign({},t),{entityType:\"Asset\",id:null}))},openPageExtension:function(n){return e.call(\"navigateToPage\",i.__assign({type:\"extension\",id:t.extension},n))},openCurrentAppPage:function(n){return e.call(\"navigateToPage\",i.__assign({type:\"app\",id:t.app},n))},onSlideInNavigation:function(e){return n.attach(e)}}}})),g=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});var n=\"preInstall\",r=\"postInstall\",o=function(e){return\"object\"==typeof e&&null!==e&&!Array.isArray(e)},i=function(e){return\"function\"==typeof e},a=function(e){return console.error(e),Promise.resolve(!1)},u=function(e,t,n){if(!i(e))return Promise.resolve(t);var r;try{r=void 0===n?e():e(n)}catch(e){return a(e)}var u,l=r;return o(u=l)&&i(u.then)||(l=Promise.resolve(l)),l.then((function(e){return e instanceof Error?Promise.reject(e):!1!==e&&(o(e)?e:t)}),a).catch(a)};t.default=function(e){var t,o=((t={}).preInstall=null,t.postInstall=null,t),a=function(e,t){if(!i(t))throw new Error(\"Handler must be a function.\");o[e]=t};return e.addHandler(\"appHook\",(function(t){var i=t.stage,a=t.installationRequestId,l=t.err;return i===n?u(o[i],{}).then((function(t){return e.send(\"appHookResult\",{stage:i,installationRequestId:a,result:t})})):i===r?u(o[i],void 0,l||null).then((function(){return e.send(\"appHookResult\",{stage:i,installationRequestId:a})})):Promise.resolve()})),{setReady:function(){return e.call(\"callAppMethod\",\"setReady\")},isInstalled:function(){return e.call(\"callAppMethod\",\"isInstalled\")},getParameters:function(){return e.call(\"callAppMethod\",\"getParameters\")},getCurrentState:function(){return e.call(\"callAppMethod\",\"getCurrentState\")},onConfigure:function(e){a(n,e)},onConfigurationCompleted:function(e){a(r,e)}}}})),m=a((function(e,t){Object.defineProperty(t,\"__esModule\",{value:!0});t.default={LOCATION_ENTRY_FIELD:\"entry-field\",LOCATION_ENTRY_FIELD_SIDEBAR:\"entry-field-sidebar\",LOCATION_ENTRY_SIDEBAR:\"entry-sidebar\",LOCATION_DIALOG:\"dialog\",LOCATION_ENTRY_EDITOR:\"entry-editor\",LOCATION_PAGE:\"page\",LOCATION_APP_CONFIG:\"app-config\"}})),b=a((function(e,t){var n;Object.defineProperty(t,\"__esModule\",{value:!0});var r=i.__importDefault(f),o=i.__importDefault(c),a=i.__importDefault(d),u=i.__importDefault(p),l=i.__importDefault(_),s=i.__importDefault(h),b=i.__importDefault(y),E=i.__importDefault(v),w=i.__importDefault(g),O=i.__importDefault(m),A=[C,T,function(e,t){var n=t.field;return{field:new o.default(e,n)}},P,S],I=((n={})[O.default.LOCATION_ENTRY_FIELD]=A,n[O.default.LOCATION_ENTRY_FIELD_SIDEBAR]=A,n[O.default.LOCATION_ENTRY_SIDEBAR]=[C,T,P,S],n[O.default.LOCATION_ENTRY_EDITOR]=[C,T,P],n[O.default.LOCATION_DIALOG]=[C,function(e){return{close:function(t){return e.send(\"closeDialog\",t)}}},S],n[O.default.LOCATION_PAGE]=[C],n[O.default.LOCATION_APP_CONFIG]=[C,function(e){return{app:w.default(e)}}],n);function C(e,t){var n=t.user,r=t.parameters,o=t.locales,i=t.ids,a=t.initialContentTypes,u=t.location||O.default.LOCATION_ENTRY_FIELD;return{location:{is:function(e){return u===e}},user:n,parameters:r,locales:{available:o.available,default:o.default,names:o.names,fallbacks:o.fallbacks,optional:o.optional,direction:o.direction},space:l.default(e,a),dialogs:s.default(e,i),navigator:E.default(e,i),notifier:{success:function(t){return e.send(\"notify\",{type:\"success\",message:t})},error:function(t){return e.send(\"notify\",{type:\"error\",message:t})}},ids:i,access:{can:function(t,n){return e.call(\"checkAccess\",t,n)}}}}function S(e,t,n){return{window:a.default(n,e)}}function P(e,t){var n=t.editorInterface;return{editor:b.default(e,n)}}function T(e,t){var n=t.locales,o=t.contentType,i=t.entry,a=t.fieldInfo;return{contentType:o,entry:u.default(e,i,a,(function(t){return new r.default(e,t,n.default)}))}}t.default=function(e,t,n){return(I[t.location]||A).reduce((function(r,o){return i.__assign(i.__assign({},r),o(e,t,n))}),{})}})),E=i.__importDefault(s),w=i.__importDefault(b),O=i.__importDefault(m);return{init:E.default(window,w.default),locations:O.default}}));","/**\n * @documentation https://github.com/contentful/ui-extensions-sdk/blob/master/typings.d.ts\n */\nimport { FieldAPI, DialogsAPI } from 'contentful-ui-extensions-sdk'\n\nexport { DialogsAPI }\n\nexport enum Intent {\n  PRIMARY = 'primary',\n  POSITIVE = 'positive',\n  NEGATIVE = 'negative',\n}\n\nconst noop = () => {\n  /* noop */\n}\n\n/**\n * Check if window is within an iframe\n *\n * @source https://stackoverflow.com/a/326076/6817437\n */\nconst inIframe = () => {\n  try {\n    return window.self !== window.top\n  } catch (e) {\n    return true\n  }\n}\n\n/**\n * Determine whether to use Contentful API or mock for dev and demo\n */\nexport const useContentfulApi = () => inIframe()\n\n/**\n * Optional table data that may seed the table with populated data -\n * such as when an existing table is accessed\n */\nexport type TableData = Array<Array<string>>\n\n/**\n * Storage values for the extension's content field\n */\nexport interface ExtensionValues {\n  useColumnHeader: boolean\n  useRowHeader: boolean\n  tableData: TableData\n}\n\ntype ChangeHandler = (arg: ExtensionValues) => void\n\n/**\n * Field action prototype to edit the `ExtensionValues`\n * of this extension. Not all values on this object are typed here\n */\nexport type ExtensionField =\n  | FieldAPI\n  | {\n      getValue: () => ExtensionValues\n      setValue: ChangeHandler\n      onValueChanged: (arg: ChangeHandler) => ChangeHandler\n    }\n\n/**\n * Contentful's `window.contentfulExtension` callback arg\n * Not all values on this object are typed here 😞\n */\nexport interface Extension {\n  field: ExtensionField\n  dialogs?: DialogsAPI\n  /**\n   * Add contentful API to window\n   *\n   * @source https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#window\n   */\n  window: {\n    startAutoResizer: () => void\n    updateHeight: () => void\n  }\n}\n\n/**\n * Seed the tableData with initial data, minimum rows/columns\n * should at least be passed in\n */\nexport const getInitialTableData = ({\n  rows,\n  columns,\n}: {\n  rows: number\n  columns: number\n}): TableData => Array.from(new Array(rows), () => new Array(columns))\n\n/**\n * Keep a number with the boundaries of a minimum and maximum\n *\n * @param num value to evaluate\n * @param min minimum value boundary\n * @param max maximum value boundary\n * @returns bounded value within a min/max\n */\nexport const clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max)\n\n/**\n * Pretend prototype for `Extension.field`\n */\nclass MockExtensionField {\n  storageKeyName = 'mockContentfulData'\n\n  private serialize(data: ExtensionValues): string {\n    return JSON.stringify(data)\n  }\n\n  private deserialize(data: string): ExtensionValues {\n    return JSON.parse(data)\n  }\n\n  setValue(value: ExtensionValues) {\n    localStorage.setItem(this.storageKeyName, this.serialize(value))\n    this.onValueChanged()\n  }\n\n  getValue(): ExtensionValues {\n    return this.deserialize(localStorage.getItem(this.storageKeyName))\n  }\n\n  onValueChanged() {\n    return this.getValue\n  }\n}\n\n/**\n * @returns mimic for extension parameter provided by Contentful API\n */\nexport const createMockExtension = (): Extension => ({\n  field: new MockExtensionField(),\n  window: {\n    updateHeight: noop,\n    startAutoResizer: noop,\n  },\n})\n","import TableController from './table-controller'\nimport { clamp } from './utils'\n\nexport const minColumns = 2\nexport const minRows = 2\nconst maxColumns = 10\nconst maxRows = 30\n\nconst columnsInputElem = document.getElementById(\n  'columns-count'\n) as HTMLInputElement\nconst rowsInputElem = document.getElementById('rows-count') as HTMLInputElement\nconst useColumnHeaderInputElem = document.getElementById(\n  'use-column-header'\n) as HTMLInputElement\nconst useRowHeaderInputElem = document.getElementById(\n  'use-row-header'\n) as HTMLInputElement\nconst addColumnButtonElem = document.getElementById(\n  'add-column'\n) as HTMLButtonElement\nconst removeColumnButtonElem = document.getElementById(\n  'remove-column'\n) as HTMLButtonElement\nconst addRowButtonElem = document.getElementById('add-row') as HTMLButtonElement\nconst removeRowButtonElem = document.getElementById(\n  'remove-row'\n) as HTMLButtonElement\n\ncolumnsInputElem.min = minColumns.toString()\ncolumnsInputElem.max = maxColumns.toString()\nrowsInputElem.min = minRows.toString()\nrowsInputElem.max = maxRows.toString()\n\n/**\n * Create all the event handles on the table element's columns/rows and\n * auxiliary settings buttons/inputs\n *\n * @param tableElem HTML table one which to add/remove columns/rows\n */\nconst createHandlers = (table: TableController) => {\n  /**\n   * Set initial values from state\n   */\n  columnsInputElem.value = table.columns.toString()\n  rowsInputElem.value = table.rows.toString()\n  useColumnHeaderInputElem.checked = table.useColumnHeader\n  useRowHeaderInputElem.checked = table.useRowHeader\n\n  /**\n   * Handle column header setting toggle\n   */\n  useColumnHeaderInputElem.onchange = function (ev) {\n    const checked = (ev.currentTarget as HTMLInputElement).checked\n    if (checked !== undefined) {\n      table.setUseColumnHeader(checked)\n    }\n  }\n\n  /**\n   * Handle row header setting toggle\n   */\n  useRowHeaderInputElem.onchange = function (ev) {\n    const checked = (ev.currentTarget as HTMLInputElement).checked\n    if (checked !== undefined) {\n      table.setUseRowHeader(checked)\n    }\n  }\n\n  /**\n   * Handles columns field input alter to change table column sizing\n   */\n  columnsInputElem.onchange = async function (ev) {\n    const oldValue = table.columns\n    const newValue = clamp(\n      parseInt((ev.currentTarget as HTMLInputElement).value, 10),\n      minColumns,\n      maxColumns\n    )\n    let commitNewValue = true\n    if (oldValue < newValue) {\n      const diff = newValue - oldValue\n      for (let i = 0; i < diff; i++) {\n        table.addColumn()\n      }\n    } else if (oldValue > newValue) {\n      const diff = oldValue - newValue\n      for (let i = 0; i < diff; i++) {\n        commitNewValue = await table.removeColumn()\n      }\n    }\n    if (commitNewValue) {\n      columnsInputElem.value = newValue.toString()\n    } else {\n      columnsInputElem.value = oldValue.toString()\n    }\n  }\n\n  /**\n   * Handles rows field input change to alter table row sizing\n   */\n  rowsInputElem.onchange = async function (ev) {\n    const oldValue = table.rows\n    const newValue = clamp(\n      parseInt((ev.target as HTMLInputElement).value, 10),\n      minRows,\n      maxRows\n    )\n    let commitNewValue = true\n    if (oldValue < newValue) {\n      const diff = newValue - oldValue\n      for (let i = 0; i < diff; i++) {\n        table.addRow()\n      }\n    } else if (oldValue > newValue) {\n      const diff = oldValue - newValue\n      for (let i = 0; i < diff; i++) {\n        commitNewValue = await table.removeRow()\n      }\n    }\n    if (commitNewValue) {\n      rowsInputElem.value = newValue.toString()\n    } else {\n      rowsInputElem.value = oldValue.toString()\n    }\n  }\n\n  /**\n   * Handles add column button clicks to add a new column and\n   * increase columns input count by one\n   */\n  addColumnButtonElem.onclick = function (_ev) {\n    const oldValue = table.columns\n    const newValue = clamp(oldValue + 1, minColumns, maxColumns)\n    table.addColumn()\n    columnsInputElem.value = newValue.toString()\n  }\n\n  /**\n   * Handles remove column button clicks to remove the last column\n   * and decrease columns input count by one\n   */\n  removeColumnButtonElem.onclick = async function (_ev) {\n    const oldValue = table.columns\n    const newValue = clamp(oldValue - 1, minColumns, maxColumns)\n    const deleteConfirmed = await table.removeColumn()\n    if (!deleteConfirmed) {\n      return\n    }\n    columnsInputElem.value = newValue.toString()\n  }\n\n  /**\n   * Handles add row button clicks to add a new row and\n   * increase the row input count by one\n   */\n  addRowButtonElem.onclick = function (_ev) {\n    const oldValue = table.rows\n    const newValue = clamp(oldValue + 1, minRows, maxRows)\n    table.addRow()\n    rowsInputElem.value = newValue.toString()\n  }\n\n  /**\n   * Handles remove row button clicks to remove a new row\n   * and decrease the row input count by one\n   */\n  removeRowButtonElem.onclick = async function (_ev) {\n    const oldValue = table.rows\n    const newValue = clamp(oldValue - 1, minRows, maxRows)\n    const deleteConfirmed = await table.removeRow()\n    if (!deleteConfirmed) {\n      return\n    }\n    rowsInputElem.value = newValue.toString()\n  }\n}\n\nexport default createHandlers\n","import { Intent, ExtensionValues, ExtensionField, DialogsAPI } from './utils'\nimport { minColumns, minRows } from './event-handlers'\n\nexport default class TableController {\n  /**\n   * Table element on which to add/remove rows\n   */\n  table: HTMLTableElement\n  /**\n   * Values from existing tables and to append new values to\n   */\n  state: ExtensionValues\n  /**\n   * Save state to external source (Contentful extension or otherwise localStorage for demo)\n   */\n  db: ExtensionField\n  /**\n   * Can be utilized to unsubscribe to value changes\n   */\n  detachValueChangeHandler: (values: ExtensionValues) => void\n  /**\n   * API provided by Contentful to allow extension to respond to user feedback\n   */\n  dialogs: DialogsAPI\n\n  /**\n   * Initialize the table and its data\n   */\n  constructor({ table, state, db, dialogs }) {\n    this.table = table\n    this.state = state\n    this.db = db\n    this.dialogs = dialogs\n\n    for (let i = 0; i < this.state.tableData.length; i++) {\n      this.addRow()\n    }\n\n    this.handleColumnHeaderStyle()\n    this.handleRowHeaderStyle()\n\n    /**\n     * @usage see https://www.contentful.com/developers/docs/extensibility/ui-extensions/sdk-reference/#field\n     * Section: \"Receiving notifications for external field value changes\"\n     * `detachValueChangeHandler` can be used to unsubscribe from onChange events\n     */\n    this.detachValueChangeHandler = this.db.onValueChanged(\n      this.valueChangeHandler\n    )\n  }\n\n  /**\n   * Save the current state\n   */\n  save = () => {\n    this.db.setValue(this.state)\n  }\n\n  /**\n   * Getter for current state\n   */\n  get currentState() {\n    return this.state\n  }\n\n  /**\n   * Column getter\n   */\n  get columns() {\n    return this.state.tableData[0].length\n  }\n\n  /**\n   * Row getter\n   */\n  get rows() {\n    return this.state.tableData.length\n  }\n\n  /**\n   * Callback to handle external changes to values (parallel editing)\n   * or when `ExtensionField.setValue` is called\n   */\n  private valueChangeHandler = (values: ExtensionValues) => {\n    this.state = Object.assign({}, this.state, values)\n  }\n\n  /**\n   * Change `useHeader` state\n   */\n  setUseColumnHeader = (useColumnHeader: boolean) => {\n    this.state.useColumnHeader = useColumnHeader\n    this.save()\n    this.handleColumnHeaderStyle()\n  }\n\n  /**\n   * Style table header for user according to header setting\n   */\n  handleColumnHeaderStyle = () => {\n    const firstRowCells = Array.from(this.table.rows[0].cells)\n    if (this.state.useRowHeader) {\n      firstRowCells.shift()\n    }\n\n    if (this.state.useColumnHeader) {\n      firstRowCells.forEach((cellElem) => {\n        this.changeTag(cellElem, 'th')\n      })\n    } else {\n      firstRowCells.forEach((cellElem) => {\n        this.changeTag(cellElem, 'td')\n      })\n    }\n  }\n\n  setUseRowHeader = (useRowHeader: boolean) => {\n    this.state.useRowHeader = useRowHeader\n    this.save()\n    this.handleRowHeaderStyle()\n  }\n\n  /**\n   * Style row header according to header setting\n   */\n  handleRowHeaderStyle = () => {\n    const rows = Array.from(this.table.rows)\n    if (this.state.useRowHeader) {\n      rows.forEach((rowElem) => {\n        const firstCell = rowElem.cells[0]\n        this.changeTag(firstCell, 'th')\n      })\n    } else {\n      rows.forEach((rowElem, index) => {\n        if (this.state.useColumnHeader && index === 0) {\n          return\n        }\n        const firstCell = rowElem.cells[0]\n        this.changeTag(firstCell, 'td')\n      })\n    }\n  }\n\n  /**\n   * @source https://stackoverflow.com/a/15086834/6817437\n   */\n  private changeTag = (el: HTMLElement, newTagName: string) => {\n    const newEl = document.createElement(newTagName)\n    while (el.firstChild) {\n      newEl.appendChild(el.firstChild)\n    }\n    /**\n     * Backwards loop in order to maintain the original order of\n     * any attributes\n     */\n    for (let i = el.attributes.length - 1; i >= 0; --i) {\n      newEl.attributes.setNamedItem(el.attributes[i].cloneNode() as Attr)\n    }\n    el.parentNode.replaceChild(newEl, el)\n  }\n\n  /**\n   * State item getter\n   */\n  get useColumnHeader() {\n    return this.state.useColumnHeader\n  }\n\n  /**\n   * State item getter\n   */\n  get useRowHeader() {\n    return this.state.useRowHeader\n  }\n\n  /**\n   * Confirm whether to delete, using Contentful Dialog API\n   * if it's available, or just `window.confirm`\n   *\n   * @returns a promise of whether to delete\n   */\n  confirmDelete = async (message: string): Promise<boolean> => {\n    if (this.dialogs) {\n      return this.dialogs.openConfirm({\n        title: 'Really delete?',\n        message,\n        intent: Intent.NEGATIVE,\n      })\n    } else {\n      return window.confirm(message)\n    }\n  }\n\n  /**\n   * The magic behind `textarea` continuing to fill\n   * parent `td` height. As text progresses to CRLF or is deleted,\n   * the natural height of the textarea is evaluated, and all\n   * textareas in the row are forced to match the height of the\n   * tallest textarea in that row.\n   *\n   * @source Forked from https://stackoverflow.com/a/24676492/6817437\n   *\n   * @usage Should be applied to `textarea` oninput and when\n   * new table cells are initialized\n   *\n   * @param element HTML textarea to measure automatic growth with input\n   */\n  private autoGrow = (element: HTMLTextAreaElement) => {\n    // Scrollheight should only be evaluated when the element's height is 'auto'\n    element.style.height = 'auto'\n    const newHeight = element.scrollHeight\n    element.style.height = `${newHeight}px`\n\n    // Make sure all cells in row are as tall as the tallest\n    const cellRow = element.dataset.row\n    const rowTextElems: NodeListOf<HTMLTextAreaElement> = document.querySelectorAll(\n      `[data-row=\"${cellRow}\"]`\n    )\n    let largestHeight = newHeight\n    rowTextElems.forEach((rowEl) => {\n      const rowElOriginalHeight = rowEl.style.height\n      rowEl.style.height = 'auto'\n      const rowElHeight = rowEl.scrollHeight\n      if (rowElHeight > largestHeight) {\n        largestHeight = rowElHeight\n      }\n      rowEl.style.height = rowElOriginalHeight\n    })\n    rowTextElems.forEach((rowEl) => {\n      rowEl.style.height = `${largestHeight}px`\n    })\n  }\n\n  /**\n   * @usage Add cell with textarea to a table row, initialize textarea\n   * with an autogrow oninput feature and save changes\n   *\n   * @param rowElem     HTML row element on which to append cell\n   * @param dataRow     Row index (y-axis, zero-based)\n   * @param dataColumn  Column index (x-axis, zero-based)\n   */\n  addCell = (\n    rowElem: HTMLTableRowElement,\n    rowIndex: number,\n    columnIndex: number\n  ) => {\n    const cell = rowElem.insertCell()\n    const textArea = document.createElement('textarea')\n    textArea.oninput = () => {\n      this.autoGrow(textArea)\n      this.state.tableData[rowIndex][columnIndex] = textArea.value || undefined\n      this.save()\n    }\n    textArea.dataset.row = rowIndex.toString()\n    textArea.dataset.column = columnIndex.toString()\n    const { tableData } = this.state\n    const value =\n      tableData && tableData[rowIndex] && tableData[rowIndex][columnIndex]\n    textArea.value = value || ''\n    cell.appendChild(textArea)\n    // Invoke once on init to match other cells in the same row\n    this.autoGrow(textArea)\n  }\n\n  /**\n   * @usage Add a row to the bottom of the table element\n   */\n  addRow = () => {\n    const lastRow = this.table.rows[this.table.rows.length - 1]\n    let index: number\n    /**\n     * Last row is not defined on the first pass\n     * when creating a row on an empty table\n     * and no `lastRow` is defined\n     */\n    if (lastRow) {\n      const textElem = lastRow.querySelector('textarea')\n      index = parseInt(textElem.dataset.row, 10) + 1\n    } else {\n      index = 0\n    }\n\n    const row = this.table.insertRow()\n    const columns = this.state.tableData[0].length\n    for (let j = 0; j < columns; j++) {\n      const columnIndex = j\n      this.addCell(row, index, columnIndex)\n    }\n\n    const cellColumns = new Array(columns)\n    if (!this.state.tableData[index]) {\n      this.state.tableData.push(cellColumns)\n      this.save()\n    }\n    this.handleRowHeaderStyle()\n  }\n\n  /**\n   * @usage Remove the last row from the table\n   *\n   * @returns A promise of whether the row was deleted\n   */\n  removeRow = async (): Promise<boolean> => {\n    if (this.table.rows.length <= minRows) {\n      return\n    }\n    const deleteIndex = this.table.rows.length - 1\n    let needsConfirmation = false,\n      removeValues = ''\n    const row = this.table.rows[deleteIndex].cells\n    Array.from(row).forEach((cellElem) => {\n      const textElem = cellElem.querySelector('textarea')\n      if (!!textElem.value) {\n        needsConfirmation = true\n        removeValues += `\\n\\n${textElem.value}`\n      }\n    })\n    const yesDelete = needsConfirmation\n      ? await this.confirmDelete(\n          `Are you sure you want to delete row ${\n            deleteIndex + 1\n          }?${removeValues}`\n        )\n      : true\n    if (yesDelete) {\n      this.table.deleteRow(deleteIndex)\n      this.state.tableData.splice(deleteIndex, 1)\n      this.save()\n    }\n    return yesDelete\n  }\n\n  /**\n   * @usage Add a new column to the right in the table\n   */\n  addColumn = () => {\n    const lastCell = this.table.rows[0].cells[\n      this.table.rows[0].cells.length - 1\n    ]\n    const textElem = lastCell.querySelector('textarea')\n    const columnPosition = parseInt(textElem.dataset.column, 10) + 1\n\n    Array.from(this.table.rows).forEach((rowEl, index) => {\n      const firstCell = rowEl.cells[0]\n      const textElem = firstCell.querySelector('textarea')\n      const rowPosition = parseInt(textElem.dataset.row, 10)\n      this.addCell(rowEl, rowPosition, columnPosition)\n      this.state.tableData[index].push(undefined)\n      this.save()\n    })\n    this.handleColumnHeaderStyle()\n  }\n\n  /**\n   * @usage Remove the table column with the highest index (or most-recently created)\n   *\n   * @returns A promise of whether the row was deleted\n   */\n  removeColumn = async (): Promise<boolean> => {\n    if (this.table.rows[0].cells.length <= minColumns) {\n      return\n    }\n    const lastCell = this.table.rows[0].cells[\n      this.table.rows[0].cells.length - 1\n    ]\n    const textElem = lastCell.querySelector('textarea')\n    const columnNumber = parseInt(textElem.dataset.column, 10) + 1\n\n    let needsConfirmation = false,\n      removeValues = ''\n    Array.from(this.table.rows).forEach((rowElem) => {\n      const lastCell = rowElem.cells[rowElem.cells.length - 1]\n      const textElem = lastCell.querySelector('textarea')\n      if (!!textElem.value) {\n        needsConfirmation = true\n        removeValues += `\\n\\n${textElem.value}`\n      }\n    })\n    const yesDelete = needsConfirmation\n      ? await this.confirmDelete(\n          `Are you sure you want to delete column ${columnNumber}?${removeValues}`\n        )\n      : true\n    if (yesDelete) {\n      Array.from(this.table.rows).forEach((rowEl, index) => {\n        const deleteIndex = rowEl.cells.length - 1\n        rowEl.deleteCell(deleteIndex)\n        this.state.tableData[index].splice(deleteIndex, 1)\n        this.save()\n      })\n    }\n    return yesDelete\n  }\n}\n","import { init as initContentfulExtension } from 'contentful-ui-extensions-sdk'\n\nimport TableController from './table-controller'\nimport createHandlers, { minColumns, minRows } from './event-handlers'\nimport {\n  useContentfulApi,\n  createMockExtension,\n  getInitialTableData,\n  Extension,\n} from './utils'\n\nconst contentElem = document.getElementById('table-extension-content')\nconst tableElem = contentElem.querySelector('table')\n\n/**\n * Handles Contentful UI extension creation with initial values (if any)\n * and create the table contents dynamically based on our defaults passed\n * to `getInitialData`\n *\n * @param extension From Contentful API in order to handle data\n */\nconst handleInitialization = (extension?: Extension) => {\n  let value = extension.field.getValue()\n  /**\n   * reset array if data corrupt -\n   * This could only occur when changes to state structure\n   * are made in a development environment.\n   *\n   * Resets state by resetting value definition\n   */\n  if (\n    value &&\n    value.tableData &&\n    !Array.isArray(value.tableData) &&\n    !Array.isArray(value.tableData[0])\n  ) {\n    value = undefined\n  }\n\n  if (!value) {\n    /**\n     * Default table values\n     */\n    value = {\n      useColumnHeader: true,\n      useRowHeader: false,\n      tableData: getInitialTableData({\n        columns: minColumns,\n        rows: minRows,\n      }),\n    }\n  }\n\n  const tableController = new TableController({\n    table: tableElem,\n    state: value,\n    db: extension.field,\n    dialogs: extension.dialogs,\n  })\n\n  createHandlers(tableController)\n\n  /**\n   * Automatically size the iframe as the content grows\n   * in order to avoid scrollbars within the extension\n   */\n  extension.window.updateHeight()\n  extension.window.startAutoResizer()\n}\n\n/**\n * Conditionally set up environment for demo/dev and Contentful extension\n */\nif (useContentfulApi()) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore we need to verify whether the types provided with the contentful SDK are correct or not\n    initContentfulExtension(handleInitialization)\n  } catch (err) {\n    console.error(err) // eslint-disable-line no-console\n    contentElem.innerHTML = `\n      <div>\n        <h1>\n          Error\n        </h1>\n        <p>\n          We encountered an error with the Table Contentful UI Extension.\n        </p>\n      </div>\n    `\n  }\n} else {\n  const mockExtension = createMockExtension()\n  handleInitialization(mockExtension)\n}\n"]}